@inherits TodosTableBase

@if (ListOfTodos != null)
{

    <div class="card mb-4">
        <div class="card-header" style="background: rgb(5, 39, 103);">
            <div class="d-flex justify-content-between mb-4 text-white">
                <div class="d-flex flex-column">
                    <h4>
                        @ListOfTodos.Title
                        <small>(@NumberOfIncompletedTodos todo not completed)</small>
                    </h4>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: @PercentOfDoneTodos;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@PercentOfDoneTodos</div>
                    </div>
                </div>
                <button class="btn btn-danger" @onclick="() => DeleteListModal.Open()">Remove list</button>
            </div>

            <DeleteListModal @ref="DeleteListModal" ListId="@ListId" ListTitle="@ListTitle"></DeleteListModal>

        </div>
        <div style="overflow-y: auto; max-height: 400px">
            <div class="list-group">
                @foreach (var todo in ListOfTodos.Todos)
                {
                    <div role="button" class="list-group-item list-group-item-action flex-column align-items-start list-group-item-secondary mb-1" style="cursor: pointer">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@todo.Title</h5>
                            <button type="button" class="close" aria-label="Delete">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="d-flex flex-column">
                            @if (!string.IsNullOrWhiteSpace(todo.Description))
                            {
                            <p class="mb-1">
                                @todo.Description
                            </p>
                            }

                            <div class="d-flex flex-column">
                                @if ((DateTime.Now - todo.DateAdded).TotalMinutes <= 30 && !todo.IsDone)
                                {
                                    <small class="text-success"> (New)</small>
                                }
                                <small class="mt-2">Created @todo.DateAdded</small>
                            </div>
                            
                        </div>
                    </div>
                }
                
            </div>
        </div>

        <div class="card-footer border" >
            <NewTodo ListId="@ListOfTodos.Id" OnCreated="@(async () => await ReloadListOfTodos())"></NewTodo>
        </div>
    </div>

}

else if (LoadFailed)
{
    <h2>List doesn't exists. Do you want to create new list?</h2>
    <button class="btn btn-primary" @onclick="NavigateToNewListComponent">New list</button>
}

else if (UpdateFailed)
{

    <h2>Update failed, try again later</h2>
}

else
{
    <div class="d-flex align-items-center text-secondary mb-4">
        <strong>Loading...</strong>
        <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
    </div>
}
