@using System.Net.Http
@using TodoList.Shared.Dto
@inject HttpClient Http
@inject AppState AppState
@implements IDisposable

    <div class="top-row pl-4 navbar navbar-dark">
        <a class="navbar-brand" href="">TodoList</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="swagger">
                    <span class="oi oi-arrow-thick-right" aria-hidden="true"></span> Swagger
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="newList">
                    <span class="oi oi-plus" aria-hidden="true"></span> New list
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="all">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> All
                </NavLink>
            </li>
            @if (AppState.ListsOfTodos.Any())
            {
                @foreach (var list in AppState.ListsOfTodos)
                {
                    var href = "list/" + list.Id;
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href=@href>
                            <span class="oi oi-list-rich" aria-hidden="true"></span> @list.Title
                        </NavLink>
                    </li>
                }
            }
            else
            {
                <li class="nav-item px-3">
                    <p class="text-white">Loading...</p>
                </li>
            }

        </ul>
    </div>



@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await AppState.ReloadLists();
        AppState.OnNewListCreated += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnNewListCreated -= StateHasChanged;
    }
}
