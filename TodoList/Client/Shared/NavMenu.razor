@using System.Net.Http
@using TodoList.Client.Services
@inject HttpClient Http
@inject TodoListsService TodoListsService
@inject AppStateContainer AppState
@implements IDisposable

    <div class="top-row pl-4 navbar navbar-dark">
        <a class="navbar-brand" href="">TodoList</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="swagger">
                    <span class="oi oi-arrow-thick-right" aria-hidden="true"></span> Swagger
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="newList">
                    <span class="oi oi-plus" aria-hidden="true"></span> New list
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="all">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> All
                </NavLink>
            </li>
        </ul>
        
        <hr class="bg-secondary"/>

        <div style="overflow-y: auto; max-height: 400px; ">

            <ul class="nav flex-column">
                @if (AppState.ListsOfTodos.Any())
                {
                    @foreach (var list in AppState.ListsOfTodos)
                    {
                        var href = "list/" + list.Id;
                        <li class="nav-item px-3">
                            <NavLink class="nav-link" href=@href>
                                <span class="oi oi-list-rich" aria-hidden="true"></span> @list.Title
                            </NavLink>
                        </li>
                    }
                }
                else
                {
                    <li class="nav-item px-3">
                        <div class="d-flex align-items-center text-secondary">
                            <strong>Loading...</strong>
                            <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
                        </div>
                    </li>
                }

            </ul>
        </div>

    </div>



@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        AppState.AddListsOfTodos(await TodoListsService.GetAllListsOfTodosAsync());
        AppState.OnListsUpdate += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnListsUpdate -= StateHasChanged;
    }
}
